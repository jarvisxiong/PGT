<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pgt.internal.dao.InternalUserDao">

    <resultMap id="internalUser" type="com.pgt.internal.bean.InternalUser">
        <id column="id" property="id" />
        <result column="login" property="login" />
        <result column="password" property="password" />
        <result column="salt" property="salt" />
        <result column="role" property="role" javaType="com.pgt.internal.bean.Role" />
        <result column="available" property="available" />
        <result column="name" property="name" />
        <result column="phone" property="phone" />
        <result column="email" property="email" />
        <result column="ip" property="ip" />
        <result column="invest_type" property="investType" javaType="com.pgt.internal.bean.InternalUserInvestType" />
        <result column="creation_date" property="creationDate" />
        <result column="last_login_date" property="lastLoginDate" />
        <result column="update_date" property="updateDate" />
    </resultMap>

    <sql id="limit-split-page">
        <if test="@Ognl@isNotBlankString(sortFieldName)">
            ORDER BY ${sortFieldName}
            <if test="!asc">
                DESC
            </if>
        </if>
        <if test="!invalidPagination">
            LIMIT #{sqlStartIndex}, #{capacity}
        </if>
    </sql>

    <select id="queryUserByLogin" parameterType="string" resultMap="internalUser">
		SELECT id, login, password, salt, role, available, name, phone, email, ip, invest_type, creation_date, last_login_date, update_date
		FROM INTERNAL_USER
		WHERE login = #{login}
	</select>

    <select id="queryUserById" parameterType="int" resultMap="internalUser">
		SELECT id, login, password, salt, role, available, name, phone, email, ip, invest_type, creation_date, last_login_date, update_date
		FROM INTERNAL_USER
		WHERE id = #{id}
	</select>

    <update id="updateLastLogin">
		UPDATE INTERNAL_USER
		SET last_login_date = now(), ip = #{ip}
		WHERE id = #{id}
	</update>

    <insert id="createInternalUser" parameterType="com.pgt.internal.bean.InternalUser" keyColumn="id" useGeneratedKeys="true">
		INSERT INTO INTERNAL_USER (login, password, salt, role, available, name, phone, email, ip, invest_type, creation_date,
		last_login_date, update_date)
		VALUES (#{login}, #{password}, #{salt}, #{role}, 1, #{name}, #{phone}, #{email}, #{ip}, #{investType}, now(), now(), now())
	</insert>

    <update id="updateInternalUser" parameterType="com.pgt.internal.bean.InternalUser">
        UPDATE INTERNAL_USER
        SET role = #{role}, available = #{available}, name = #{name}, phone = #{phone}, email = #{email}, invest_type = #{investType},
        update_date = now()
        <if test="@Ognl@isNotBlankString(login)">
            , login = #{login}
        </if>
        <if test="@Ognl@isNotBlankString(password)">
            ,password = #{password}, salt = #{salt}
        </if>
        WHERE id = #{id}
    </update>

    <select id="queryInternalUserCount" resultType="long" parameterType="com.pgt.cart.bean.pagination.InternalPagination">
        SELECT COUNT(id)
        FROM INTERNAL_USER
        WHERE 1 = 1
        <if test="@Ognl@isNotBlankString(keyword)">
            AND (name LIKE CONCAT('%', #{keyword}, '%')
            OR phone LIKE CONCAT('%', #{keyword}, '%')
            OR email LIKE CONCAT('%', #{keyword}, '%'))
        </if>
    </select>

    <select id="queryInternalUserPage" resultMap="internalUser" parameterType="com.pgt.cart.bean.pagination.InternalPagination">
        SELECT id, login, password, salt, role, available, name, phone, email, ip, invest_type, creation_date, last_login_date, update_date
        FROM INTERNAL_USER
        WHERE 1 = 1
        <if test="@Ognl@isNotBlankString(keyword)">
            AND (name LIKE CONCAT('%', #{keyword}, '%')
            OR phone LIKE CONCAT('%', #{keyword}, '%')
            OR email LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        <include refid="limit-split-page" />
    </select>

    <select id="queryInternalUserNameCountExcludeId" resultType="long">
        SELECT COUNT(id)
        FROM INTERNAL_USER
        WHERE name = #{name}
        <if test="@Ognl@isValidId(id)">
            AND id != #{id}
        </if>
    </select>

    <select id="queryInternalUserLoginCountExcludeId" resultType="long">
        SELECT COUNT(id)
        FROM INTERNAL_USER
        WHERE login = #{login}
        <if test="@Ognl@isValidId(id)">
            AND id != #{id}
        </if>
    </select>

    <select id="queryInternalUserEmailCountExcludeId" resultType="long">
        SELECT COUNT(id)
        FROM INTERNAL_USER
        WHERE email = #{email}
        <if test="@Ognl@isValidId(id)">
            AND id != #{id}
        </if>
    </select>

    <select id="queryInternalUserPhoneCountExcludeId" resultType="long">
        SELECT COUNT(id)
        FROM INTERNAL_USER
        WHERE phone = #{phone}
        <if test="@Ognl@isValidId(id)">
            AND id != #{id}
        </if>
    </select>

    <update id="updateBatchInternalUserAvailable">
        <foreach collection="ids" item="id" index="index" open="" close="" separator=";">
            <if test="@Ognl@isValidId(id)">
                UPDATE INTERNAL_USER
                <set>
                    available = #{available}, update_date = now()
                </set>
                WHERE id = #{id}
            </if>
        </foreach>
    </update>

    <select id="queryInternalUserByRoles" resultMap="internalUser">
        SELECT id, login, password, salt, role, available, name, phone, email, ip, invest_type, creation_date, last_login_date, update_date
        FROM INTERNAL_USER
        WHERE role IN
        <foreach collection="roles" item="role" index="index" open="(" close=")" separator=", ">
            #{role}
        </foreach>
    </select>
</mapper>