<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pgt.payment.dao.PaymentMapper">

    <insert id="createInventoryLock" parameterType="com.pgt.inventory.bean.InventoryLock" >
        INSERT INTO INVENTORY_LOCK (PRODUCT_ID, ORDER_ID, QUANTITY, EXPIRE_DATE, CREATION_DATE, UPDATE_DATE)
        VALUES (#{productId}, #{orderId}, #{quantity}, #{expiredDate},now(), now())
    </insert>

    <update id="updateInventoryLock" parameterType="com.pgt.inventory.bean.InventoryLock">
        UPDATE INVENTORY_LOCK
        SET QUANTITY = #{quantity}, EXPIRE_DATE = #{expiredDate},
        UPDATE_DATE = now()
        WHERE PRODUCT_ID = #{productId} AND ORDER_ID = #{orderId}
    </update>

    <delete id="deleteInventoryLock" parameterType="com.pgt.inventory.bean.InventoryLock">
        DELETE FROM INVENTORY_LOCK WHERE PRODUCT_ID = #{productId} AND ORDER_ID = #{orderId}
    </delete>

    <select id="queryInventoryQuantity" parameterType="int" resultType="int">
        SELECT STOCK FROM PRODUCT WHERE PRODUCT_ID = #{id}
    </select>

    <update id="updateInventoryQuantity" parameterType="com.pgt.product.bean.Product">
        UPDATE PRODUCT  SET STOCK = #{stock}  WHERE PRODUCT_ID = #{id}
    </update>



    <resultMap id="inventoryLock" type="com.pgt.inventory.bean.InventoryLock">
        <result column="ORDER_ID" property="orderId"/>
        <result column="PRODUCT_ID" property="productId"/>
        <result column="QUANTITY" property="quantity"/>
        <result column="EXPIRE_DATE" property="expiredDate"/>
        <result column="CREATION_DATE" property="creationDate"/>
        <result column="UPDATE_DATE" property="updateDate"/>
    </resultMap>


    <select id="findInventoryLockByOrderId" resultMap="inventoryLock" parameterType="int">
        SELECT *
        FROM INVENTORY_LOCK where ORDER_ID = #{id}
    </select>

    <select id="acquireRowLock" resultType="int" parameterType="int">
        SELECT PRODUCT_ID
        FROM PRODUCT WHERE PRODUCT_ID = #{id} FOR UPDATE
    </select>

    <select id="findExpiredOrders" resultType="int">
        SELECT DISTINCT(ORDER_ID) FROM INVENTORY_LOCK WHERE EXPIRE_DATE > now()
    </select>

    <select id="findExpiredInventoryLock" resultMap="inventoryLock" parameterType="int">
        SELECT * FROM INVENTORY_LOCK WHERE EXPIRE_DATE > now() and ORDER_ID = #{id}
    </select>


</mapper>